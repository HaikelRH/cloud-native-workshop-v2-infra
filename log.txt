Start with CCNRD Dev Track Environment Deployment... 

USERCOUNT: 3
MODULE_TYPE: m1,m2,m3,m4

clusterrole.rbac.authorization.k8s.io/cluster-admin added: "opentlc-mgr"
clusterrole.rbac.authorization.k8s.io/view added: "user0"
.clusterrole.rbac.authorization.k8s.io/view added: "user1"
.clusterrole.rbac.authorization.k8s.io/view added: "user2"
.clusterrole.rbac.authorization.k8s.io/view added: "user3"
.Now using project "labs-infra" on server "https://api.cluster-ccnv2-e7df.ccnv2-e7df.example.opentlc.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app django-psql-example

to build a new example application in Python. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node

userquota already is deleted...

limitrange "labs-infra-core-resource-limits" deleted
Now using project "dummy-21887" on server "https://api.cluster-ccnv2-e7df.ccnv2-e7df.example.opentlc.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app django-psql-example

to build a new example application in Python. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node

route.route.openshift.io/dummy created
HOSTNAME_SUFFIX: apps.cluster-ccnv2-e7df.ccnv2-e7df.example.opentlc.com 

Now using project "labs-infra" on server "https://api.cluster-ccnv2-e7df.ccnv2-e7df.example.opentlc.com:6443".
template.template.openshift.io/coolstore-monolith-binary-build created
template.template.openshift.io/coolstore-monolith-pipeline-build created
template.template.openshift.io/ccn-sso72 created
service/rhamt-web-console created
route.route.openshift.io/rhamt-web-console created
route.route.openshift.io/secure-rhamt-web-console created
deploymentconfig.apps.openshift.io/rhamt-web-console created
deploymentconfig.apps.openshift.io/rhamt-web-console-executor created
deploymentconfig.apps.openshift.io/rhamt-web-console-postgresql created
service/rhamt-web-console-amq created
service/rhamt-web-console-postgresql created
persistentvolumeclaim/rhamt-web-console-postgresql-claim created
persistentvolumeclaim/rhamt-web-console-rhamt-web-claim created
Installing OpenShift Service Mesh...
clusterserviceversion.operators.coreos.com/servicemeshoperator.v1.0.3 created
subscription.operators.coreos.com/servicemeshoperator created
Deploying Service Mesh Control Plane and Membber Roll...
Now using project "istio-system" on server "https://api.cluster-ccnv2-e7df.ccnv2-e7df.example.opentlc.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app django-psql-example

to build a new example application in Python. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node

limitrange "istio-system-core-resource-limits" deleted
servicemeshcontrolplane.maistra.io/basic-install created
servicemeshmemberroll.maistra.io/default created
Creating coolstore & bookinfo projects for each user... 

Now using project "user0-inventory" on server "https://api.cluster-ccnv2-e7df.ccnv2-e7df.example.opentlc.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app django-psql-example

to build a new example application in Python. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node

securitycontextconstraints.security.openshift.io/anyuid added to: ["system:serviceaccount:user0-inventory:default"]
securitycontextconstraints.security.openshift.io/privileged added to: ["system:serviceaccount:user0-inventory:default"]
clusterrole.rbac.authorization.k8s.io/admin added: "user0"
Now using project "user0-catalog" on server "https://api.cluster-ccnv2-e7df.ccnv2-e7df.example.opentlc.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app django-psql-example

to build a new example application in Python. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node

securitycontextconstraints.security.openshift.io/anyuid added to: ["system:serviceaccount:user0-catalog:default"]
securitycontextconstraints.security.openshift.io/privileged added to: ["system:serviceaccount:user0-catalog:default"]
clusterrole.rbac.authorization.k8s.io/admin added: "user0"
Now using project "user0-bookinfo" on server "https://api.cluster-ccnv2-e7df.ccnv2-e7df.example.opentlc.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app django-psql-example

to build a new example application in Python. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node

securitycontextconstraints.security.openshift.io/anyuid added to: ["system:serviceaccount:user0-bookinfo:default"]
securitycontextconstraints.security.openshift.io/privileged added to: ["system:serviceaccount:user0-bookinfo:default"]
clusterrole.rbac.authorization.k8s.io/admin added: "user0"
clusterrole.rbac.authorization.k8s.io/view added: "user0"
Now using project "user0-cloudnativeapps" on server "https://api.cluster-ccnv2-e7df.ccnv2-e7df.example.opentlc.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app django-psql-example

to build a new example application in Python. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node

securitycontextconstraints.security.openshift.io/anyuid added to: ["system:serviceaccount:user0-cloudnativeapps:default"]
securitycontextconstraints.security.openshift.io/privileged added to: ["system:serviceaccount:user0-cloudnativeapps:default"]
clusterrole.rbac.authorization.k8s.io/admin added: "user0"
clusterrole.rbac.authorization.k8s.io/view added: "user0"
Now using project "user1-inventory" on server "https://api.cluster-ccnv2-e7df.ccnv2-e7df.example.opentlc.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app django-psql-example

to build a new example application in Python. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node

securitycontextconstraints.security.openshift.io/anyuid added to: ["system:serviceaccount:user1-inventory:default"]
securitycontextconstraints.security.openshift.io/privileged added to: ["system:serviceaccount:user1-inventory:default"]
clusterrole.rbac.authorization.k8s.io/admin added: "user1"
Now using project "user1-catalog" on server "https://api.cluster-ccnv2-e7df.ccnv2-e7df.example.opentlc.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app django-psql-example

to build a new example application in Python. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node

securitycontextconstraints.security.openshift.io/anyuid added to: ["system:serviceaccount:user1-catalog:default"]
securitycontextconstraints.security.openshift.io/privileged added to: ["system:serviceaccount:user1-catalog:default"]
clusterrole.rbac.authorization.k8s.io/admin added: "user1"
Now using project "user1-bookinfo" on server "https://api.cluster-ccnv2-e7df.ccnv2-e7df.example.opentlc.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app django-psql-example

to build a new example application in Python. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node

securitycontextconstraints.security.openshift.io/anyuid added to: ["system:serviceaccount:user1-bookinfo:default"]
securitycontextconstraints.security.openshift.io/privileged added to: ["system:serviceaccount:user1-bookinfo:default"]
clusterrole.rbac.authorization.k8s.io/admin added: "user1"
clusterrole.rbac.authorization.k8s.io/view added: "user1"
Now using project "user1-cloudnativeapps" on server "https://api.cluster-ccnv2-e7df.ccnv2-e7df.example.opentlc.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app django-psql-example

to build a new example application in Python. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node

securitycontextconstraints.security.openshift.io/anyuid added to: ["system:serviceaccount:user1-cloudnativeapps:default"]
securitycontextconstraints.security.openshift.io/privileged added to: ["system:serviceaccount:user1-cloudnativeapps:default"]
clusterrole.rbac.authorization.k8s.io/admin added: "user1"
clusterrole.rbac.authorization.k8s.io/view added: "user1"
Now using project "user2-inventory" on server "https://api.cluster-ccnv2-e7df.ccnv2-e7df.example.opentlc.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app django-psql-example

to build a new example application in Python. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node

securitycontextconstraints.security.openshift.io/anyuid added to: ["system:serviceaccount:user2-inventory:default"]
securitycontextconstraints.security.openshift.io/privileged added to: ["system:serviceaccount:user2-inventory:default"]
clusterrole.rbac.authorization.k8s.io/admin added: "user2"
Now using project "user2-catalog" on server "https://api.cluster-ccnv2-e7df.ccnv2-e7df.example.opentlc.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app django-psql-example

to build a new example application in Python. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node

securitycontextconstraints.security.openshift.io/anyuid added to: ["system:serviceaccount:user2-catalog:default"]
securitycontextconstraints.security.openshift.io/privileged added to: ["system:serviceaccount:user2-catalog:default"]
clusterrole.rbac.authorization.k8s.io/admin added: "user2"
Now using project "user2-bookinfo" on server "https://api.cluster-ccnv2-e7df.ccnv2-e7df.example.opentlc.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app django-psql-example

to build a new example application in Python. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node

securitycontextconstraints.security.openshift.io/anyuid added to: ["system:serviceaccount:user2-bookinfo:default"]
securitycontextconstraints.security.openshift.io/privileged added to: ["system:serviceaccount:user2-bookinfo:default"]
clusterrole.rbac.authorization.k8s.io/admin added: "user2"
clusterrole.rbac.authorization.k8s.io/view added: "user2"
Now using project "user2-cloudnativeapps" on server "https://api.cluster-ccnv2-e7df.ccnv2-e7df.example.opentlc.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app django-psql-example

to build a new example application in Python. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node

securitycontextconstraints.security.openshift.io/anyuid added to: ["system:serviceaccount:user2-cloudnativeapps:default"]
securitycontextconstraints.security.openshift.io/privileged added to: ["system:serviceaccount:user2-cloudnativeapps:default"]
clusterrole.rbac.authorization.k8s.io/admin added: "user2"
clusterrole.rbac.authorization.k8s.io/view added: "user2"
Now using project "user3-inventory" on server "https://api.cluster-ccnv2-e7df.ccnv2-e7df.example.opentlc.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app django-psql-example

to build a new example application in Python. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node

securitycontextconstraints.security.openshift.io/anyuid added to: ["system:serviceaccount:user3-inventory:default"]
securitycontextconstraints.security.openshift.io/privileged added to: ["system:serviceaccount:user3-inventory:default"]
clusterrole.rbac.authorization.k8s.io/admin added: "user3"
Now using project "user3-catalog" on server "https://api.cluster-ccnv2-e7df.ccnv2-e7df.example.opentlc.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app django-psql-example

to build a new example application in Python. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node

securitycontextconstraints.security.openshift.io/anyuid added to: ["system:serviceaccount:user3-catalog:default"]
securitycontextconstraints.security.openshift.io/privileged added to: ["system:serviceaccount:user3-catalog:default"]
clusterrole.rbac.authorization.k8s.io/admin added: "user3"
Now using project "user3-bookinfo" on server "https://api.cluster-ccnv2-e7df.ccnv2-e7df.example.opentlc.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app django-psql-example

to build a new example application in Python. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node

securitycontextconstraints.security.openshift.io/anyuid added to: ["system:serviceaccount:user3-bookinfo:default"]
securitycontextconstraints.security.openshift.io/privileged added to: ["system:serviceaccount:user3-bookinfo:default"]
clusterrole.rbac.authorization.k8s.io/admin added: "user3"
clusterrole.rbac.authorization.k8s.io/view added: "user3"
Now using project "user3-cloudnativeapps" on server "https://api.cluster-ccnv2-e7df.ccnv2-e7df.example.opentlc.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app django-psql-example

to build a new example application in Python. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node

securitycontextconstraints.security.openshift.io/anyuid added to: ["system:serviceaccount:user3-cloudnativeapps:default"]
securitycontextconstraints.security.openshift.io/privileged added to: ["system:serviceaccount:user3-cloudnativeapps:default"]
clusterrole.rbac.authorization.k8s.io/admin added: "user3"
clusterrole.rbac.authorization.k8s.io/view added: "user3"
Installing OpenShift Serverless...
clusterserviceversion.operators.coreos.com/serverless-operator.v1.2.0 created
subscription.operators.coreos.com/serverless-operator created
Now using project "knative-serving" on server "https://api.cluster-ccnv2-e7df.ccnv2-e7df.example.opentlc.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app django-psql-example

to build a new example application in Python. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node

knativeserving.serving.knative.dev/knative-serving created
Installing Knative Eventing...
clusterserviceversion.operators.coreos.com/knative-eventing-operator.v0.9.0 created
subscription.operators.coreos.com/knative-eventing-operator created
Creating Role, Group, and assign Users
role.rbac.authorization.k8s.io/workshop-student0 created
role.rbac.authorization.k8s.io/workshop-student0 added: "user0"
role.rbac.authorization.k8s.io/workshop-student1 created
role.rbac.authorization.k8s.io/workshop-student1 added: "user1"
role.rbac.authorization.k8s.io/workshop-student2 created
role.rbac.authorization.k8s.io/workshop-student2 added: "user2"
role.rbac.authorization.k8s.io/workshop-student3 created
role.rbac.authorization.k8s.io/workshop-student3 added: "user3"
clusterserviceversion.operators.coreos.com/amqstreams.v1.3.0 created
subscription.operators.coreos.com/amq-streams created
subscription.operators.coreos.com/knative-kafka-operator created
Waiting for Kafka CRD
..Install Kafka cluster in Knative-eventing
kafka.kafka.strimzi.io/my-cluster created
knativeeventingkafka.eventing.knative.dev/knative-eventing-kafka created
Installing Tekton pipelines
clusterserviceversion.operators.coreos.com/openshift-pipelines-operator.v0.8.2 created
subscription.operators.coreos.com/openshift-pipelines-operator created
Creating new test-pipeline projects
Now using project "user0-cloudnative-pipeline" on server "https://api.cluster-ccnv2-e7df.ccnv2-e7df.example.opentlc.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app django-psql-example

to build a new example application in Python. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node

limitrange "user0-cloudnativeapps-core-resource-limits" deleted
limitrange "user0-cloudnative-pipeline-core-resource-limits" deleted
clusterrole.rbac.authorization.k8s.io/admin added: "user0"
Now using project "user1-cloudnative-pipeline" on server "https://api.cluster-ccnv2-e7df.ccnv2-e7df.example.opentlc.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app django-psql-example

to build a new example application in Python. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node

limitrange "user1-cloudnative-pipeline-core-resource-limits" deleted
clusterrole.rbac.authorization.k8s.io/admin added: "user1"
Now using project "user2-cloudnative-pipeline" on server "https://api.cluster-ccnv2-e7df.ccnv2-e7df.example.opentlc.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app django-psql-example

to build a new example application in Python. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node

limitrange "user2-cloudnative-pipeline-core-resource-limits" deleted
clusterrole.rbac.authorization.k8s.io/admin added: "user2"
Now using project "user3-cloudnative-pipeline" on server "https://api.cluster-ccnv2-e7df.ccnv2-e7df.example.opentlc.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app django-psql-example

to build a new example application in Python. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node

limitrange "user3-cloudnative-pipeline-core-resource-limits" deleted
clusterrole.rbac.authorization.k8s.io/admin added: "user3"
clusterrole.rbac.authorization.k8s.io/view added: "user0"
clusterrole.rbac.authorization.k8s.io/view added: "user1"
clusterrole.rbac.authorization.k8s.io/view added: "user2"
clusterrole.rbac.authorization.k8s.io/view added: "user3"
--> Found Docker image 82cc938 (10 months old) from quay.io for "quay.io/osevg/workshopper"

    * An image stream tag will be created as "guides-m1:latest" that will track this image
    * This image will be deployed in deployment config "guides-m1"
    * Port 8080/tcp will be load balanced by service "guides-m1"
      * Other containers can access this service through the hostname "guides-m1"

--> Creating resources ...
    imagestream.image.openshift.io "guides-m1" created
    deploymentconfig.apps.openshift.io "guides-m1" created
    service "guides-m1" created
--> Success
    Application is not exposed. You can expose services to the outside world by executing one or more of the commands below:
     'oc expose svc/guides-m1' 
    Run 'oc status' to view your app.
route.route.openshift.io/guides-m1 exposed
--> Found Docker image 82cc938 (10 months old) from quay.io for "quay.io/osevg/workshopper"

    * An image stream tag will be created as "guides-m2:latest" that will track this image
    * This image will be deployed in deployment config "guides-m2"
    * Port 8080/tcp will be load balanced by service "guides-m2"
      * Other containers can access this service through the hostname "guides-m2"

--> Creating resources ...
    imagestream.image.openshift.io "guides-m2" created
    deploymentconfig.apps.openshift.io "guides-m2" created
    service "guides-m2" created
--> Success
    Application is not exposed. You can expose services to the outside world by executing one or more of the commands below:
     'oc expose svc/guides-m2' 
    Run 'oc status' to view your app.
route.route.openshift.io/guides-m2 exposed
--> Found Docker image 82cc938 (10 months old) from quay.io for "quay.io/osevg/workshopper"

    * An image stream tag will be created as "guides-m3:latest" that will track this image
    * This image will be deployed in deployment config "guides-m3"
    * Port 8080/tcp will be load balanced by service "guides-m3"
      * Other containers can access this service through the hostname "guides-m3"

--> Creating resources ...
    imagestream.image.openshift.io "guides-m3" created
    deploymentconfig.apps.openshift.io "guides-m3" created
    service "guides-m3" created
--> Success
    Application is not exposed. You can expose services to the outside world by executing one or more of the commands below:
     'oc expose svc/guides-m3' 
    Run 'oc status' to view your app.
route.route.openshift.io/guides-m3 exposed
--> Found Docker image 82cc938 (10 months old) from quay.io for "quay.io/osevg/workshopper"

    * An image stream tag will be created as "guides-m4:latest" that will track this image
    * This image will be deployed in deployment config "guides-m4"
    * Port 8080/tcp will be load balanced by service "guides-m4"
      * Other containers can access this service through the hostname "guides-m4"

--> Creating resources ...
    imagestream.image.openshift.io "guides-m4" created
    deploymentconfig.apps.openshift.io "guides-m4" created
    service "guides-m4" created
--> Success
    Application is not exposed. You can expose services to the outside world by executing one or more of the commands below:
     'oc expose svc/guides-m4' 
    Run 'oc status' to view your app.
route.route.openshift.io/guides-m4 exposed
template.template.openshift.io/jenkins-ephemeral replaced
Creating Jenkins project...
Now using project "jenkins" on server "https://api.cluster-ccnv2-e7df.ccnv2-e7df.example.opentlc.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app django-psql-example

to build a new example application in Python. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node

--> Deploying template "openshift/jenkins-ephemeral" to project jenkins

     Jenkins (Ephemeral)
     ---------
     Jenkins service, without persistent storage.
     
     WARNING: Any data stored will be lost upon pod destruction. Only use this template for testing.

     A Jenkins service has been created in your project.  Log into Jenkins with your OpenShift account.  The tutorial at https://github.com/openshift/origin/blob/master/examples/jenkins/README.md contains more information about using this template.

     * With parameters:
        * Jenkins Service Name=jenkins
        * Jenkins JNLP Service Name=jenkins-jnlp
        * Enable OAuth in Jenkins=true
        * Memory Limit=1Gi
        * Jenkins ImageStream Namespace=openshift
        * Disable memory intensive administrative monitors=true
        * Jenkins ImageStreamTag=jenkins:2
        * Allows use of Jenkins Update Center repository with invalid SSL certificate=false

--> Creating resources with label app=jenkins ...
    route.route.openshift.io "jenkins" created
    deploymentconfig.apps.openshift.io "jenkins" created
    serviceaccount "jenkins" created
    rolebinding.authorization.openshift.io "jenkins_edit" created
    service "jenkins-jnlp" created
    service "jenkins" created
--> Success
    Access your application via route 'jenkins-jenkins.apps.cluster-ccnv2-e7df.ccnv2-e7df.example.opentlc.com' 
    Run 'oc status' to view your app.
deploymentconfig.apps.openshift.io/jenkins resource requirements updated
Waiting for rhamt to be running... 

Getting access token to update RH-SSO theme 

Updating a master realm with RH-SSO theme 

Updated a master realm with RH-SSO theme successfully...

Creating RH-SSO users 

Created RH-SSO user0 successfully...

Created RH-SSO user1 successfully...

Created RH-SSO user2 successfully...

Created RH-SSO user3 successfully...

Retrieving RH-SSO user's ID list 

USER_ID_LIST: [{"id":"5ecedc0d-8bda-4b07-9164-ea7ac15dbd13","createdTimestamp":1576753106163,"username":"rhamt","enabled":true,"totp":false,"emailVerified":false,"disableableCredentialTypes":["password"],"requiredActions":[],"notBefore":0,"access":{"manageGroupMembership":true,"view":true,"mapRoles":true,"impersonate":true,"manage":true}},{"id":"9902c594-6823-4be3-ac45-18038f112456","createdTimestamp":1576753379532,"username":"user0","enabled":true,"totp":false,"emailVerified":false,"disableableCredentialTypes":[],"requiredActions":[],"notBefore":0,"access":{"manageGroupMembership":true,"view":true,"mapRoles":true,"impersonate":true,"manage":true}},{"id":"75e479ae-87ad-4cfe-9793-bbd1b2c48008","createdTimestamp":1576753380473,"username":"user1","enabled":true,"totp":false,"emailVerified":false,"disableableCredentialTypes":[],"requiredActions":[],"notBefore":0,"access":{"manageGroupMembership":true,"view":true,"mapRoles":true,"impersonate":true,"manage":true}},{"id":"be48000c-41dd-4083-9f50-823032a11ab1","createdTimestamp":1576753381388,"username":"user2","enabled":true,"totp":false,"emailVerified":false,"disableableCredentialTypes":[],"requiredActions":[],"notBefore":0,"access":{"manageGroupMembership":true,"view":true,"mapRoles":true,"impersonate":true,"manage":true}},{"id":"db0ac57b-e943-4cff-8965-89f7863a4748","createdTimestamp":1576753382284,"username":"user3","enabled":true,"totp":false,"emailVerified":false,"disableableCredentialTypes":[],"requiredActions":[],"notBefore":0,"access":{"manageGroupMembership":true,"view":true,"mapRoles":true,"impersonate":true,"manage":true}}] 

Getting access token to reset passwords 

RESULT_TOKEN: eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICI3bUNIOVNseWZxQ1U0eFRqZm0zTm5ZcWVjNGU5ZVJNYzhyUFR5Z3JGRHJnIn0.eyJqdGkiOiIzZjI4ODMzNS05NTIwLTQzZDktOGY2ZS1lZmUxNjE0MzUxMTIiLCJleHAiOjE1NzY3NTkzODQsIm5iZiI6MCwiaWF0IjoxNTc2NzUzMzg0LCJpc3MiOiJodHRwczovL3NlY3VyZS1yaGFtdC13ZWItY29uc29sZS1sYWJzLWluZnJhLmFwcHMuY2x1c3Rlci1jY252Mi1lN2RmLmNjbnYyLWU3ZGYuZXhhbXBsZS5vcGVudGxjLmNvbS9hdXRoL3JlYWxtcy9tYXN0ZXIiLCJzdWIiOiI1MDg4MTczZC0yYmFkLTRkNjAtYTk4NS01YjkyM2RlNTk3NzQiLCJ0eXAiOiJCZWFyZXIiLCJhenAiOiJhZG1pbi1jbGkiLCJhdXRoX3RpbWUiOjAsInNlc3Npb25fc3RhdGUiOiJiNzNlNDk1Mi1iN2M4LTQ5OTgtYTBlZC1mMmYyZGY0NjBhNDkiLCJhY3IiOiIxIiwic2NvcGUiOiJlbWFpbCBwcm9maWxlIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiJ9.KsyBKbK03YrqDQdwsQAxXhkCjkS_ybrR0_gIqThXnkkgz-qXAJuvM8JOOIm_h6szpDn4bKPiEMTzsZQafDOJwUBTE5dKA_ydGy0vOIWoCvKVUcAYajK8kwdqdV7AYpneBdXU6KFmQJ3ZbqdvUaIsNekF6_BQGX12KAgLAdtF0rTloZ3oie7Ar0umMhjBnx7zEMil0Absro_gHBE3D27jwiJUSuLpq-VVlX-HRRYfWRrBbbg7Ou-xAcRCKRIOfg0jOMA3Vt4CRibY1IBIzeBePr7doSeaspaC4n4q1mgbVBHCf9uB8UFRSERHIhc1wbRDshKeyJI0-1mvgSVzTwyYaQ 

Reset passwords for each RH-SSO user 

user1 password is reset successfully...

user2 password is reset successfully...

user3 password is reset successfully...

user4 password is reset successfully...

project.project.openshift.io "dummy-21887" deleted
Installing CodeReady Workspace...

clusterserviceversion.operators.coreos.com/crwoperator.v1.2.2 created
subscription.operators.coreos.com/codeready-workspaces created
Waiting for CheCluster CRDs
.checluster.org.eclipse.che/codeready created
Waiting for Che to come up again after creating checluster...
